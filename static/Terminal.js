// Generated by CoffeeScript 1.6.3
var Terminal;

module.exports = Terminal = (function() {
  function Terminal() {}

  Terminal.echo = function(s) {
    var w_delta;
    w_delta = s.length;
    if (w_delta) {
      s.replace(/[\r\n]+/, function() {
        Terminal.cursor.y++;
        return '';
      });
      Terminal.cursor.x += w_delta;
      if (Terminal.cursor.x > Terminal.screen.w) {
        Terminal.cursor.y += Math.floor(Terminal.cursor.x / Terminal.screen.w);
        Terminal.cursor.x = Terminal.cursor.x % Terminal.screen.w;
      }
    }
    process.stdout.write(s);
    return this;
  };

  Terminal.esc = (function() {
    function _Class(s) {
      process.stdout.write("\x1b" + s);
    }

    _Class.CLEAR_SCREEN = '[2J';

    _Class.CLEAR_EOL = '[K';

    _Class.CLEAR_EOF = '[J';

    _Class.POS = function(x, y) {
      return "[" + y + ";" + x + "H";
    };

    _Class.color = (function() {
      function _Class() {}

      _Class.reset = '[0m';

      _Class.bold = '[1m';

      _Class.inverse = '[7m';

      _Class.strike = '[9m';

      _Class.unbold = '[22m';

      _Class.black = '[30m';

      _Class.red = '[31m';

      _Class.green = '[32m';

      _Class.yellow = '[33m';

      _Class.blue = '[34m';

      _Class.magenta = '[35m';

      _Class.cyan = '[36m';

      _Class.white = '[37m';

      _Class.xterm = function(i) {
        return "[38;5;" + i + "m";
      };

      _Class.bg_reset = '[49m';

      _Class.bg_black = '[40m';

      _Class.bg_red = '[41m';

      _Class.bg_green = '[42m';

      _Class.bg_yellow = '[43m';

      _Class.bg_blue = '[44m';

      _Class.bg_magenta = '[45m';

      _Class.bg_cyan = '[46m';

      _Class.bg_white = '[47m';

      _Class.bg_xterm = function(i) {
        return "[48;5;" + i + "m";
      };

      return _Class;

    })();

    return _Class;

  }).call(this);

  Terminal.clear = function() {
    Terminal.esc(Terminal.esc.CLEAR_SCREEN);
    return this;
  };

  Terminal.cursor = {
    x: null,
    y: null
  };

  Terminal.screen = {
    w: null,
    h: null
  };

  Terminal.go = function(x, y) {
    Terminal.cursor.x = x;
    Terminal.cursor.y = y;
    Terminal.esc(Terminal.esc.POS(x, y));
    return this;
  };

  Terminal.move = function(x, y) {
    var dx, dy;
    if (y == null) {
      y = 0;
    }
    dx = Terminal.cursor.x + x;
    dy = Terminal.cursor.y + y;
    if (dx > 4 && dx < Terminal.screen.w && dy > 0 && dy <= Terminal.screen.h) {
      return this.go(dx, dy);
    }
  };

  Terminal.fg = function(color) {
    Terminal.esc(Terminal.esc.color[color]);
    return this;
  };

  Terminal.bg = function(color) {
    Terminal.esc(Terminal.esc.color['bg_' + color]);
    return this;
  };

  Terminal.xfg = function(i) {
    Terminal.esc(Terminal.esc.color.xterm(i));
    return this;
  };

  Terminal.xbg = function(i) {
    Terminal.esc(Terminal.esc.color.bg_xterm(i));
    return this;
  };

  Terminal.clear_screen = function() {
    var y, _i, _ref;
    Terminal.go(1, 1).clear();
    for (y = _i = 0, _ref = Terminal.screen.h; 0 <= _ref ? _i <= _ref : _i >= _ref; y = 0 <= _ref ? ++_i : --_i) {
      Terminal.clear_eol();
    }
    Terminal.go(1, 1);
    return this;
  };

  Terminal.clear_eol = function() {
    Terminal.echo(repeat(Terminal.screen.w - Terminal.cursor.x, ' '));
    return this;
  };

  return Terminal;

}).call(this);
