// Generated by CoffeeScript 1.6.3
var Cursor, HydraBuffer, View;

HydraBuffer = require('./HydraBuffer');

Cursor = require('./Cursor');

module.exports = View = (function() {
  function View(o) {
    this.tab = o.tab;
    this.cursors = [
      new Cursor({
        user: Window.current_user,
        view: this,
        x: 0,
        y: 0
      })
    ];
    this.buffer = HydraBuffer({
      view: this,
      file: o.file
    });
    this.x = o.x;
    this.y = o.y;
    this.w = o.w;
    this.h = o.h;
    this.offset = null;
  }

  View.prototype.resize = function() {
    return this.draw();
  };

  View.prototype.draw = function() {
    var clipped, data, gutter, gutter_size, line, lines, ln, y, yy, _i, _j, _ref;
    Logger.out('View.draw() was called.');
    data = this.buffer.data.toString('utf8');
    lines = data.split("\n");
    lines.pop();
    gutter_size = Math.max(3, lines.length.toString().length + 1);
    gutter = repeat(gutter_size, ' ');
    yy = Math.min(lines.length, this.h);
    Logger.out("lines.length is " + lines.length + ", yy is " + yy);
    ln = 1;
    if (ln < lines.length) {
      for (ln = _i = 1; 1 <= yy ? _i <= yy : _i >= yy; ln = 1 <= yy ? ++_i : --_i) {
        line = lines[ln - 1];
        Terminal.xbg(NviConfig.gutter_bg).xfg(NviConfig.gutter_fg).go(this.x + 1, this.y + ln).echo((gutter + ln).substr(gutter_size * -1) + ' ');
        clipped = line.length > this.w;
        if (clipped) {
          line = line.substr(0, this.w - 1) + '>';
        }
        Terminal.xbg(NviConfig.text_bg).xfg(NviConfig.text_fg).echo(line).clear_eol();
      }
      Logger.out("now ln " + ln + ", @h " + this.h);
    }
    if (ln < this.h) {
      for (y = _j = ln, _ref = this.h; ln <= _ref ? _j <= _ref : _j >= _ref; y = ln <= _ref ? ++_j : --_j) {
        Terminal.xbg(NviConfig.gutter_bg).xfg(NviConfig.gutter_fg).go(this.x + 1, this.y + y).fg('bold').echo('~').fg('unbold');
      }
    }
    return Terminal.go(this.x + gutter_size + 2, this.y + 0).xfg(255);
  };

  return View;

})();
