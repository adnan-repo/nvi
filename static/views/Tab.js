// Generated by CoffeeScript 1.6.3
var Tab, View;

View = require('./View');

module.exports = Tab = (function() {
  function Tab(o) {
    this.name = o.name || 'untitled';
    if (o.active) {
      Window.active_tab = this;
    }
    this.resize({
      x: o.x,
      y: o.y,
      w: o.w,
      h: o.h
    });
    this.views = [
      new View({
        tab: this,
        file: o.file,
        x: this.x,
        y: this.y,
        w: this.w,
        h: this.ih,
        active: o.active
      })
    ];
    return;
  }

  Tab.prototype.resize = function(o) {
    var view, _i, _len, _ref;
    if (o.x) {
      this.x = o.x;
    }
    if (this.x < 1) {
      die("Tab.x may not be less than 1!");
    }
    if (o.y) {
      this.y = o.y;
    }
    if (this.y < 1) {
      die("Tab.y may not be less than 1!");
    }
    this.w = o.w;
    if (this.w < 1) {
      die("Tab.w may not be less than 1!");
    }
    this.h = o.h;
    if (this.h < 1) {
      die("Tab.h may not be less than 1!");
    }
    this.ih = o.h;
    this.draw();
    if (this.views) {
      _ref = this.views;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        view = _ref[_i];
        view.resize({
          w: this.w,
          h: this.ih
        });
      }
    }
  };

  Tab.prototype.draw = function() {};

  Tab.prototype.split = function(direction, file) {
    var div_w, half_w, new_view, nv, old_view, view;
    view = this.active_view;
    new_view = {};
    old_view = {};
    if (direction === 'v') {
      div_w = 1;
      half_w = Math.floor((view.w - div_w) / 2);
      new_view.w = half_w;
      new_view.x = view.x + div_w + half_w;
      new_view.h = view.h;
      new_view.y = view.y;
      old_view.x = view.x;
      old_view.y = view.y;
      old_view.w = half_w;
      old_view.h = view.h;
    } else {
      return;
    }
    view.resize(old_view);
    view.active = false;
    nv = new View({
      tab: Window.active_tab,
      file: file,
      x: new_view.x,
      y: new_view.y,
      w: new_view.w,
      h: new_view.h,
      active: true
    });
    Window.active_tab.views.push(nv);
  };

  return Tab;

})();
