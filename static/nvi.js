// Generated by CoffeeScript 1.4.0
var bold, color, color_name, die, gutter_bg, gutter_fg, i, keypress, layer, terminal, text_bg, text_fg, _i, _j, _k, _l, _len, _len1, _len2, _ref, _ref1, _ref2;

keypress = require('keypress');

terminal = require('./terminal');

process.stdin.setRawMode(true);

keypress(process.stdin);

keypress.enableMouse(process.stdout);

die = function(err) {
  process.stdin.resume();
  process.stderr.write(err);
  return process.exit(1);
};

if (!process.stdout.isTTY) {
  die('must be in a tty');
}

process.stdout.on('resize', function() {
  return console.log("caught resize " + process.stdout.columns + ", " + process.stdout.rows);
});

process.stdin.on('keypress', function(ch, key) {
  console.log("got keypress", arguments);
  if (key && key.ctrl && key.name === 'c') {
    return process.stdin.pause();
  }
});

process.stdin.on('mousepress', function(info) {});

process.on('exit', function() {
  return keypress.disableMouse(process.stdout);
});

terminal.clear().go(0, 0).echo("hello curses world!\n");

_ref = ['', 'bg_'];
for (_i = 0, _len = _ref.length; _i < _len; _i++) {
  layer = _ref[_i];
  _ref1 = [0, 1];
  for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
    bold = _ref1[_j];
    terminal.echo("\n");
    _ref2 = 'black red green yellow blue magenta cyan white'.split(' ');
    for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
      color = _ref2[_k];
      color_name = "" + layer + color;
      if (bold) {
        terminal.fg('bold');
      }
      if (layer === '') {
        terminal.fg(color).echo(color_name).fg('reset');
      } else {
        terminal.bg(color).fg('white').echo(color_name).bg('reset');
      }
    }
  }
}

terminal.echo("\n");

for (i = _l = 0; _l <= 255; i = ++_l) {
  terminal.xbg(i).xfg(i + 2).echo("" + i).fg('reset').bg('reset');
}

terminal.echo("\n");

text_fg = 255;

text_bg = 235;

gutter_bg = 234;

gutter_fg = 240;

terminal.echo("\n");

global.delay = function(s, f) {
  return setTimeout(f, s);
};

global.interval = function(s, f) {
  return setInterval(f, s);
};

terminal.echo("now let's try to clear the screen with gray background\n");

delay(1000, function() {
  terminal.xbg(gutter_bg).xfg(gutter_fg).clear().go(1, 1).echo('  1 ').xfg(text_fg).xbg(text_bg).echo("how is this?");
  terminal.ctl(terminal.ctl.CLEAR_EOL);
  terminal.xbg(gutter_bg).xfg(gutter_fg).go(1, 2).echo('~   ');
  terminal.ctl(terminal.ctl.CLEAR_EOL);
  return terminal.go(16, 1).xfg(255);
});

process.stdin.resume();
