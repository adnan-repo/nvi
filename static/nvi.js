// Generated by CoffeeScript 1.6.3
var keypress, nvi;

keypress = require('keypress');

global.logger = require('./logger');

global.delay = function(s, f) {
  return setTimeout(f, s);
};

global.interval = function(s, f) {
  return setInterval(f, s);
};

global.repeat = function(n, s) {
  var i, o, _i;
  o = '';
  for (i = _i = 0; 0 <= n ? _i <= n : _i >= n; i = 0 <= n ? ++_i : --_i) {
    o += s;
  }
  return o;
};

global.die = function(err) {
  process.stdin.resume();
  nvi.terminal.fg('reset').clear().go(1, 1);
  if (err) {
    process.stderr.write(err + "\n\n");
    process.exit(1);
  }
  return process.exit(0);
};

if (!process.stdout.isTTY) {
  die('must be in a tty');
}

nvi = (function() {
  function nvi() {}

  nvi.init = function() {
    var resize,
      _this = this;
    this.terminal = require('./terminal');
    logger.out('init');
    process.stdin.setRawMode(true);
    keypress(process.stdin);
    keypress.enableMouse(process.stdout);
    this.config = {
      text_fg: 255,
      text_bg: 235,
      gutter_bg: 234,
      gutter_fg: 240
    };
    process.stdout.on('resize', resize = function() {
      logger.out("caught resize " + process.stdout.columns + ", " + process.stdout.rows);
      _this.terminal.screen.w = process.stdout.columns;
      _this.terminal.screen.h = process.stdout.rows;
      return _this.redraw();
    });
    resize();
    process.stdin.on('keypress', function(ch, key) {
      logger.out("caught keypress: " + JSON.stringify(arguments));
      if (key && key.ctrl && key.name === 'c') {
        return die('');
      }
    });
    process.stdin.on('mousepress', function(info) {
      return logger.out("caught mousepress: " + JSON.stringify(info));
    });
    process.on('exit', function() {
      return keypress.disableMouse(process.stdout);
    });
    return process.stdin.resume();
  };

  nvi.redraw = function() {
    var y, _i, _ref, _ref1;
    this.terminal.xbg(this.config.gutter_bg).clear_screen();
    this.terminal.xbg(this.config.gutter_bg).xfg(this.config.gutter_fg).go(1, 1).echo('  1 ');
    this.terminal.xbg(this.config.text_bg).xfg(this.config.text_fg).echo("how is this?").clear_eol();
    this.terminal.xbg(this.config.gutter_bg).xfg(this.config.gutter_fg).echo('  2 ');
    this.terminal.xbg(this.config.text_bg).xfg(this.config.text_fg).echo("hehe").clear_eol();
    for (y = _i = _ref = this.terminal.cursor.y, _ref1 = this.terminal.screen.h; _ref <= _ref1 ? _i <= _ref1 : _i >= _ref1; y = _ref <= _ref1 ? ++_i : --_i) {
      this.terminal.xbg(this.config.gutter_bg).xfg(this.config.gutter_fg).go(1, y).fg('bold').echo('~').fg('unbold');
    }
    return this.terminal.go(8, 2).xfg(255);
  };

  return nvi;

})();

nvi.init();

require('./personalize')(nvi);
